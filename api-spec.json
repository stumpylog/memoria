{
  "components": {
    "schemas": {
      "AlbumAddImageInSchema": {
        "properties": {
          "image_ids": {
            "description": "The id of the image to add to the album",
            "items": {
              "type": "integer"
            },
            "title": "Image Ids",
            "type": "array"
          }
        },
        "title": "AlbumAddImageInSchema",
        "type": "object"
      },
      "AlbumBasicReadOutSchema": {
        "properties": {
          "created_at": {
            "description": "Timestamp when the object was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The description of the album",
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "id": {
            "description": "The unique identifier of the object",
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "description": "The count of images in this album",
            "title": "Image Count",
            "type": "integer"
          },
          "name": {
            "description": "The name of the album",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the object was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": ["id", "created_at", "updated_at", "name", "image_count"],
        "title": "AlbumBasicReadOutSchema",
        "type": "object"
      },
      "AlbumCreateInSchema": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The description of the album",
            "title": "Description"
          },
          "edit_group_ids": {
            "description": "IDs of Groups allowed to edit",
            "items": {
              "type": "integer"
            },
            "title": "Edit Group Ids",
            "type": "array"
          },
          "name": {
            "description": "The name of the album",
            "title": "Name",
            "type": "string"
          },
          "view_group_ids": {
            "description": "IDs of Groups allowed to view",
            "items": {
              "type": "integer"
            },
            "title": "View Group Ids",
            "type": "array"
          }
        },
        "required": ["name"],
        "title": "AlbumCreateInSchema",
        "type": "object"
      },
      "AlbumRemoveImageInSchema": {
        "properties": {
          "image_ids": {
            "description": "The id of the image to remove from the album",
            "items": {
              "type": "integer"
            },
            "title": "Image Ids",
            "type": "array"
          }
        },
        "title": "AlbumRemoveImageInSchema",
        "type": "object"
      },
      "AlbumSortUpdateInSchema": {
        "properties": {
          "sorting": {
            "description": "The new order of the images, with the index being the new position in the album",
            "items": {
              "type": "integer"
            },
            "title": "Sorting",
            "type": "array"
          }
        },
        "required": ["sorting"],
        "title": "AlbumSortUpdateInSchema",
        "type": "object"
      },
      "AlbumUpdateInSchema": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The new description of the album",
            "title": "Description"
          },
          "edit_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to edit",
            "title": "Edit Group Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The new name of the album",
            "title": "Name"
          },
          "view_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to view",
            "title": "View Group Ids"
          }
        },
        "title": "AlbumUpdateInSchema",
        "type": "object"
      },
      "AlbumWithImagesOutSchema": {
        "properties": {
          "created_at": {
            "description": "Timestamp when the object was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The description of the album",
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "id": {
            "description": "The unique identifier of the object",
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "description": "The count of images in this album",
            "title": "Image Count",
            "type": "integer"
          },
          "image_ids": {
            "description": "The ids of the images in this album in sorted order",
            "items": {
              "type": "integer"
            },
            "title": "Image Ids",
            "type": "array"
          },
          "name": {
            "description": "The name of the album",
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the object was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": ["id", "created_at", "updated_at", "name", "image_count", "image_ids"],
        "title": "AlbumWithImagesOutSchema",
        "type": "object"
      },
      "AuthLoginSchema": {
        "properties": {
          "password": {
            "description": "The user's password (treated as a secret).",
            "format": "password",
            "title": "Password",
            "type": "string",
            "writeOnly": true
          },
          "username": {
            "description": "The user's login name.",
            "title": "Username",
            "type": "string"
          }
        },
        "required": ["username", "password"],
        "title": "AuthLoginSchema",
        "type": "object"
      },
      "BreadcrumbSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["name", "id"],
        "title": "BreadcrumbSchema",
        "type": "object"
      },
      "CountryListItemSchemaOut": {
        "properties": {
          "alpha2": {
            "title": "Alpha2",
            "type": "string"
          },
          "best_name": {
            "title": "Best Name",
            "type": "string"
          }
        },
        "required": ["alpha2", "best_name"],
        "title": "CountryListItemSchemaOut",
        "type": "object"
      },
      "CsrfTokenOutSchema": {
        "properties": {
          "csrf_token": {
            "description": "The CSRF token used for session verification.",
            "title": "Csrf Token",
            "type": "string"
          }
        },
        "required": ["csrf_token"],
        "title": "CsrfTokenOutSchema",
        "type": "object"
      },
      "FolderDetailSchemaOut": {
        "properties": {
          "breadcrumbs": {
            "items": {
              "$ref": "#/components/schemas/BreadcrumbSchema"
            },
            "title": "Breadcrumbs",
            "type": "array"
          },
          "child_folders": {
            "items": {
              "$ref": "#/components/schemas/RootFolderSchemaOut"
            },
            "title": "Child Folders",
            "type": "array"
          },
          "created_at": {
            "description": "Timestamp when the object was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "folder_images": {
            "items": {
              "type": "integer"
            },
            "title": "Folder Images",
            "type": "array"
          },
          "has_children": {
            "title": "Has Children",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the object was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": [
          "created_at",
          "updated_at",
          "id",
          "name",
          "description",
          "child_folders",
          "folder_images",
          "breadcrumbs",
          "has_children"
        ],
        "title": "FolderDetailSchemaOut",
        "type": "object"
      },
      "FolderUpdateSchemaIn": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to edit",
            "title": "Edit Group Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "view_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to view",
            "title": "View Group Ids"
          }
        },
        "title": "FolderUpdateSchemaIn",
        "type": "object"
      },
      "GroupCreateInSchema": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["name"],
        "title": "GroupCreateInSchema",
        "type": "object"
      },
      "GroupOutSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "title": "GroupOutSchema",
        "type": "object"
      },
      "GroupSchemaOut": {
        "properties": {
          "id": {
            "description": "The unique identifier of the object",
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "description": "The name of the group",
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "title": "GroupSchemaOut",
        "type": "object"
      },
      "GroupUpdateInSchema": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["name"],
        "title": "GroupUpdateInSchema",
        "type": "object"
      },
      "ImageBooleanFilterSchema": {
        "properties": {
          "is_deleted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by deletion status",
            "title": "Is Deleted"
          },
          "is_dirty": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by dirty status",
            "title": "Is Dirty"
          },
          "is_starred": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by starred status",
            "title": "Is Starred"
          }
        },
        "title": "ImageBooleanFilterSchema",
        "type": "object"
      },
      "ImageDateFilterSchema": {
        "properties": {
          "date_end": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images up to this date using comparison_date",
            "title": "Date End"
          },
          "date_start": {
            "anyOf": [
              {
                "format": "date",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this date onwards using comparison_date",
            "title": "Date Start"
          },
          "day_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images up to this day (1-31, includes null days)",
            "title": "Day End"
          },
          "day_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this day onwards (1-31, includes null days)",
            "title": "Day Start"
          },
          "month_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images up to this month (1-12, includes null months)",
            "title": "Month End"
          },
          "month_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this month onwards (1-12, includes null months)",
            "title": "Month Start"
          },
          "year_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images up to this year",
            "title": "Year End"
          },
          "year_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this year onwards",
            "title": "Year Start"
          }
        },
        "title": "ImageDateFilterSchema",
        "type": "object"
      },
      "ImageDateSchemaOut": {
        "properties": {
          "comparison_date": {
            "format": "date",
            "title": "Comparison Date",
            "type": "string"
          },
          "day": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Day"
          },
          "day_valid": {
            "default": true,
            "title": "Day Valid",
            "type": "boolean"
          },
          "month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Month"
          },
          "month_valid": {
            "default": true,
            "title": "Month Valid",
            "type": "boolean"
          },
          "year": {
            "title": "Year",
            "type": "integer"
          }
        },
        "required": ["comparison_date", "year"],
        "title": "ImageDateSchemaOut",
        "type": "object"
      },
      "ImageDateUpdateSchemaIn": {
        "properties": {
          "date": {
            "format": "date",
            "title": "Date",
            "type": "string"
          },
          "day_valid": {
            "title": "Day Valid",
            "type": "boolean"
          },
          "month_valid": {
            "title": "Month Valid",
            "type": "boolean"
          }
        },
        "required": ["date", "month_valid", "day_valid"],
        "title": "ImageDateUpdateSchemaIn",
        "type": "object"
      },
      "ImageExactDateFilterSchema": {
        "description": "Exact matching for specific year/month/day combinations",
        "properties": {
          "day": {
            "anyOf": [
              {
                "maximum": 31,
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this exact day (1-31)",
            "title": "Day"
          },
          "month": {
            "anyOf": [
              {
                "maximum": 12,
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this exact month (1-12)",
            "title": "Month"
          },
          "year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter images from this exact year",
            "title": "Year"
          }
        },
        "title": "ImageExactDateFilterSchema",
        "type": "object"
      },
      "ImageFKFilterSchema": {
        "properties": {
          "folder_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by ImageFolder ID",
            "title": "Folder Id"
          }
        },
        "title": "ImageFKFilterSchema",
        "type": "object"
      },
      "ImageFolderSchemaOut": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["id", "name"],
        "title": "ImageFolderSchemaOut",
        "type": "object"
      },
      "ImageLocationFilterSchema": {
        "properties": {
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by city name (partial match)",
            "title": "City"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by country code (ISO 3166-1 alpha 2)",
            "title": "Country Code"
          },
          "sub_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by sub-location (partial match)",
            "title": "Sub Location"
          },
          "subdivision_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by state/province code (ISO 3166-2)",
            "title": "Subdivision Code"
          }
        },
        "title": "ImageLocationFilterSchema",
        "type": "object"
      },
      "ImageLocationSchemaOut": {
        "properties": {
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "country_code": {
            "title": "Country Code",
            "type": "string"
          },
          "country_name": {
            "title": "Country Name",
            "type": "string"
          },
          "sub_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Location"
          },
          "subdivision_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdivision Code"
          },
          "subdivision_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdivision Name"
          }
        },
        "required": [
          "country_code",
          "country_name",
          "subdivision_code",
          "subdivision_name",
          "city",
          "sub_location"
        ],
        "title": "ImageLocationSchemaOut",
        "type": "object"
      },
      "ImageLocationUpdateSchemaIn": {
        "properties": {
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          },
          "country_code": {
            "title": "Country Code",
            "type": "string"
          },
          "sub_location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Location"
          },
          "subdivision_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subdivision Code"
          }
        },
        "required": ["country_code", "subdivision_code", "city", "sub_location"],
        "title": "ImageLocationUpdateSchemaIn",
        "type": "object"
      },
      "ImageM2MFilterSchema": {
        "properties": {
          "exclude_people_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Exclude images with these Person IDs",
            "title": "Exclude People Ids"
          },
          "exclude_pets_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Exclude images with these Pet IDs",
            "title": "Exclude Pets Ids"
          },
          "exclude_tags_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Exclude images with these Tag IDs",
            "title": "Exclude Tags Ids"
          },
          "people_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by Person IDs",
            "title": "People Ids"
          },
          "pets_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by Pet IDs",
            "title": "Pets Ids"
          },
          "require_all": {
            "default": false,
            "description": "Require ALL specified IDs to be present (AND logic)",
            "title": "Require All",
            "type": "boolean"
          },
          "tags_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by Tag IDs",
            "title": "Tags Ids"
          }
        },
        "title": "ImageM2MFilterSchema",
        "type": "object"
      },
      "ImageMetadataSchemaOut": {
        "properties": {
          "can_edit": {
            "title": "Can Edit",
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "file_size": {
            "title": "File Size",
            "type": "integer"
          },
          "folder": {
            "$ref": "#/components/schemas/ImageFolderSchemaOut"
          },
          "id": {
            "description": "The unique identifier of the object",
            "title": "Id",
            "type": "integer"
          },
          "image_fs_id": {
            "title": "Image Fs Id",
            "type": "string"
          },
          "larger_size_url": {
            "title": "Larger Size Url",
            "type": "string"
          },
          "orientation": {
            "$ref": "#/components/schemas/RotationEnum"
          },
          "original_checksum": {
            "title": "Original Checksum",
            "type": "string"
          },
          "original_path": {
            "format": "file-path",
            "title": "Original Path",
            "type": "string"
          },
          "phash": {
            "title": "Phash",
            "type": "string"
          },
          "size": {
            "$ref": "#/components/schemas/ImageSizeSchemaOut"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": [
          "id",
          "larger_size_url",
          "orientation",
          "size",
          "title",
          "description",
          "file_size",
          "created_at",
          "updated_at",
          "original_checksum",
          "phash",
          "original_path",
          "image_fs_id",
          "can_edit",
          "folder"
        ],
        "title": "ImageMetadataSchemaOut",
        "type": "object"
      },
      "ImageMetadataUpdateSchemaIn": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to edit",
            "title": "Edit Group Ids"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "view_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to view",
            "title": "View Group Ids"
          }
        },
        "required": ["title", "description"],
        "title": "ImageMetadataUpdateSchemaIn",
        "type": "object"
      },
      "ImageScaledSideMaxEnum": {
        "description": "IntEnum for the maximum side length of a scaled image,\ncommonly used for responsive image breakpoints.\n\nSync with ImageScaledSideMaxChoices",
        "enum": [768, 1024, 1920, 2560, 3840],
        "title": "ImageScaledSideMaxEnum",
        "type": "integer"
      },
      "ImageSizeSchemaOut": {
        "properties": {
          "large_version_height": {
            "title": "Large Version Height",
            "type": "integer"
          },
          "large_version_width": {
            "title": "Large Version Width",
            "type": "integer"
          },
          "original_height": {
            "title": "Original Height",
            "type": "integer"
          },
          "original_width": {
            "title": "Original Width",
            "type": "integer"
          }
        },
        "required": [
          "original_height",
          "original_width",
          "large_version_height",
          "large_version_width"
        ],
        "title": "ImageSizeSchemaOut",
        "type": "object"
      },
      "ImageThumbnailSchemaOut": {
        "properties": {
          "id": {
            "description": "The unique identifier of the object",
            "title": "Id",
            "type": "integer"
          },
          "thumbnail_height": {
            "title": "Thumbnail Height",
            "type": "integer"
          },
          "thumbnail_url": {
            "title": "Thumbnail Url",
            "type": "string"
          },
          "thumbnail_width": {
            "title": "Thumbnail Width",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          }
        },
        "required": ["id", "title", "thumbnail_url", "thumbnail_height", "thumbnail_width"],
        "title": "ImageThumbnailSchemaOut",
        "type": "object"
      },
      "ImagesPerPageChoices": {
        "enum": [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
        "title": "ImagesPerPageChoices",
        "type": "integer"
      },
      "Input": {
        "properties": {
          "limit": {
            "default": 100,
            "minimum": 1,
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          }
        },
        "title": "Input",
        "type": "object"
      },
      "PagedAlbumBasicReadOutSchema": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AlbumBasicReadOutSchema"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": ["items", "count"],
        "title": "PagedAlbumBasicReadOutSchema",
        "type": "object"
      },
      "PagedImageThumbnailSchemaOut": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ImageThumbnailSchemaOut"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": ["items", "count"],
        "title": "PagedImageThumbnailSchemaOut",
        "type": "object"
      },
      "PagedPersonImageOutSchema": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PersonImageOutSchema"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": ["items", "count"],
        "title": "PagedPersonImageOutSchema",
        "type": "object"
      },
      "PagedPersonReadOutSchema": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PersonReadOutSchema"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": ["items", "count"],
        "title": "PagedPersonReadOutSchema",
        "type": "object"
      },
      "PagedPetImageOutSchema": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PetImageOutSchema"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": ["items", "count"],
        "title": "PagedPetImageOutSchema",
        "type": "object"
      },
      "PagedPetReadSchemaOut": {
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PetReadSchemaOut"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": ["items", "count"],
        "title": "PagedPetReadSchemaOut",
        "type": "object"
      },
      "PersonDetailOutSchema": {
        "properties": {
          "created_at": {
            "description": "Timestamp when the object was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "title": "Image Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "updated_at": {
            "description": "Timestamp when the object was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": ["created_at", "updated_at", "id", "name", "image_count"],
        "title": "PersonDetailOutSchema",
        "type": "object"
      },
      "PersonImageOutSchema": {
        "properties": {
          "id": {
            "description": "One image the person appears in",
            "title": "Id",
            "type": "integer"
          }
        },
        "required": ["id"],
        "title": "PersonImageOutSchema",
        "type": "object"
      },
      "PersonInImageSchemaOut": {
        "description": "Schema for representing a PersonInImage instance.\nDetails a specific person's bounding box in an image.",
        "properties": {
          "center_x": {
            "title": "Center X",
            "type": "number"
          },
          "center_y": {
            "title": "Center Y",
            "type": "number"
          },
          "height": {
            "title": "Height",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "person_id": {
            "title": "Person Id",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "number"
          }
        },
        "required": ["id", "center_x", "center_y", "height", "width", "person_id", "name"],
        "title": "PersonInImageSchemaOut",
        "type": "object"
      },
      "PersonReadOutSchema": {
        "description": "Schema when reading a person",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "title": "Image Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["id", "name", "image_count"],
        "title": "PersonReadOutSchema",
        "type": "object"
      },
      "PersonUpdateInSchema": {
        "description": "Schema to update a person",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to edit",
            "title": "Edit Group Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "view_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to view",
            "title": "View Group Ids"
          }
        },
        "title": "PersonUpdateInSchema",
        "type": "object"
      },
      "PetImageOutSchema": {
        "properties": {
          "id": {
            "description": "One image the pet appears in",
            "title": "Id",
            "type": "integer"
          }
        },
        "required": ["id"],
        "title": "PetImageOutSchema",
        "type": "object"
      },
      "PetInImageSchemaOut": {
        "description": "Schema for representing a PetInImage instance.\nDetails a specific pet's bounding box in an image.",
        "properties": {
          "center_x": {
            "title": "Center X",
            "type": "number"
          },
          "center_y": {
            "title": "Center Y",
            "type": "number"
          },
          "height": {
            "title": "Height",
            "type": "number"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "pet_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pet Id"
          },
          "width": {
            "title": "Width",
            "type": "number"
          }
        },
        "required": ["id", "center_x", "center_y", "height", "width", "name"],
        "title": "PetInImageSchemaOut",
        "type": "object"
      },
      "PetReadDetailSchemaOut": {
        "description": "Schema when reading a pet",
        "properties": {
          "created_at": {
            "description": "Timestamp when the object was created",
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "title": "Image Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "pet_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PetTypeChoices"
              },
              {
                "type": "null"
              }
            ]
          },
          "updated_at": {
            "description": "Timestamp when the object was last updated",
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": ["created_at", "updated_at", "id", "name", "image_count"],
        "title": "PetReadDetailSchemaOut",
        "type": "object"
      },
      "PetReadSchemaOut": {
        "description": "Schema when reading a pet",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "title": "Image Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "pet_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PetTypeChoices"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": ["id", "name", "image_count"],
        "title": "PetReadSchemaOut",
        "type": "object"
      },
      "PetTypeChoices": {
        "enum": ["cat", "dog", "horse"],
        "title": "PetTypeChoices",
        "type": "string"
      },
      "PetUpdateInSchema": {
        "description": "Schema to update a pet",
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to edit",
            "title": "Edit Group Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "pet_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PetTypeChoices"
              },
              {
                "type": "null"
              }
            ]
          },
          "view_group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "New list of Group IDs allowed to view",
            "title": "View Group Ids"
          }
        },
        "title": "PetUpdateInSchema",
        "type": "object"
      },
      "RootFolderSchemaOut": {
        "properties": {
          "child_count": {
            "default": 0,
            "title": "Child Count",
            "type": "integer"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "edit_groups": {
            "description": "Groups allowed to edit this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "Edit Groups",
            "type": "array"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "image_count": {
            "default": 0,
            "title": "Image Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "view_groups": {
            "description": "Groups allowed to view this object",
            "items": {
              "$ref": "#/components/schemas/GroupSchemaOut"
            },
            "title": "View Groups",
            "type": "array"
          }
        },
        "required": ["id", "name", "description"],
        "title": "RootFolderSchemaOut",
        "type": "object"
      },
      "RotationEnum": {
        "description": "https://exiftool.org/TagNames/EXIF.html (0x0112)",
        "enum": [1, 2, 3, 4, 5, 6, 7, 8],
        "title": "RotationEnum",
        "type": "integer"
      },
      "SiteSettingsSchemaOut": {
        "description": "Schema for outputting site-wide image and quality settings.\nUsed for retrieving the current configuration.",
        "properties": {
          "large_image_max_size": {
            "$ref": "#/components/schemas/ImageScaledSideMaxEnum",
            "description": "The largest side dimension of generated large images"
          },
          "large_image_quality": {
            "description": "The WebP quality setting for generate large images",
            "maximum": 100,
            "minimum": 1,
            "title": "Large Image Quality",
            "type": "integer"
          },
          "thumbnail_max_size": {
            "$ref": "#/components/schemas/ThumbnailSizeEnum",
            "description": "The largest side dimension of generated image thumbnails"
          }
        },
        "required": ["large_image_max_size", "large_image_quality", "thumbnail_max_size"],
        "title": "SiteSettingsSchemaOut",
        "type": "object"
      },
      "SiteSettingsUpdateSchemaIn": {
        "description": "Schema for updating site settings. All fields are optional to allow\npartial updates (PATCH requests), using Python 3.10+ `| None` syntax.",
        "properties": {
          "large_image_max_size": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageScaledSideMaxEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The largest side dimension of generated large images"
          },
          "large_image_quality": {
            "anyOf": [
              {
                "maximum": 100,
                "minimum": 1,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "The WebP quality setting for generate large images",
            "title": "Large Image Quality"
          },
          "thumbnail_max_size": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThumbnailSizeEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "The largest side dimension of generated image thumbnails"
          }
        },
        "title": "SiteSettingsUpdateSchemaIn",
        "type": "object"
      },
      "StatisticsResponseSchema": {
        "description": "Combined schema for system and user-specific statistics.",
        "properties": {
          "system_statistics": {
            "$ref": "#/components/schemas/SystemStatisticsSchema",
            "description": "Overall system-level statistics, such as disk usage."
          },
          "user_statistics": {
            "$ref": "#/components/schemas/UserStatisticsSchema",
            "description": "Statistics related to the current user's view and edit permissions."
          }
        },
        "required": ["user_statistics", "system_statistics"],
        "title": "StatisticsResponseSchema",
        "type": "object"
      },
      "SubdivisionListItemSchemaOut": {
        "properties": {
          "code": {
            "title": "Code",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": ["code", "name"],
        "title": "SubdivisionListItemSchemaOut",
        "type": "object"
      },
      "SystemStatisticsSchema": {
        "description": "Schema for overall system statistics.\nThis now only includes non-sensitive system-level information like disk space.",
        "properties": {
          "disk_free_space_gb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Disk space currently free in GB where media files are stored.",
            "title": "Disk Free Space Gb"
          },
          "disk_total_space_gb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Total disk space available in GB where media files are stored.",
            "title": "Disk Total Space Gb"
          },
          "disk_used_space_gb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Disk space currently used in GB where media files are stored.",
            "title": "Disk Used Space Gb"
          }
        },
        "title": "SystemStatisticsSchema",
        "type": "object"
      },
      "ThumbnailSizeEnum": {
        "description": "Defines standard pixel dimensions for image thumbnails using an IntEnum.\nThe value represents the maximum dimension (width or height)\nof the thumbnail, with aspect ratio preserved.\n\nSync with ThumbnailSizeChoices",
        "enum": [128, 256, 512, 640, 800],
        "title": "ThumbnailSizeEnum",
        "type": "integer"
      },
      "TimezoneChoices": {
        "enum": [
          "Africa/Abidjan",
          "Africa/Accra",
          "Africa/Addis_Ababa",
          "Africa/Algiers",
          "Africa/Asmara",
          "Africa/Asmera",
          "Africa/Bamako",
          "Africa/Bangui",
          "Africa/Banjul",
          "Africa/Bissau",
          "Africa/Blantyre",
          "Africa/Brazzaville",
          "Africa/Bujumbura",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Ceuta",
          "Africa/Conakry",
          "Africa/Dakar",
          "Africa/Dar_es_Salaam",
          "Africa/Djibouti",
          "Africa/Douala",
          "Africa/El_Aaiun",
          "Africa/Freetown",
          "Africa/Gaborone",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Juba",
          "Africa/Kampala",
          "Africa/Khartoum",
          "Africa/Kigali",
          "Africa/Kinshasa",
          "Africa/Lagos",
          "Africa/Libreville",
          "Africa/Lome",
          "Africa/Luanda",
          "Africa/Lubumbashi",
          "Africa/Lusaka",
          "Africa/Malabo",
          "Africa/Maputo",
          "Africa/Maseru",
          "Africa/Mbabane",
          "Africa/Mogadishu",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "Africa/Ndjamena",
          "Africa/Niamey",
          "Africa/Nouakchott",
          "Africa/Ouagadougou",
          "Africa/Porto-Novo",
          "Africa/Sao_Tome",
          "Africa/Timbuktu",
          "Africa/Tripoli",
          "Africa/Tunis",
          "Africa/Windhoek",
          "America/Adak",
          "America/Anchorage",
          "America/Anguilla",
          "America/Antigua",
          "America/Araguaina",
          "America/Argentina/Buenos_Aires",
          "America/Argentina/Catamarca",
          "America/Argentina/ComodRivadavia",
          "America/Argentina/Cordoba",
          "America/Argentina/Jujuy",
          "America/Argentina/La_Rioja",
          "America/Argentina/Mendoza",
          "America/Argentina/Rio_Gallegos",
          "America/Argentina/Salta",
          "America/Argentina/San_Juan",
          "America/Argentina/San_Luis",
          "America/Argentina/Tucuman",
          "America/Argentina/Ushuaia",
          "America/Aruba",
          "America/Asuncion",
          "America/Atikokan",
          "America/Atka",
          "America/Bahia",
          "America/Bahia_Banderas",
          "America/Barbados",
          "America/Belem",
          "America/Belize",
          "America/Blanc-Sablon",
          "America/Boa_Vista",
          "America/Bogota",
          "America/Boise",
          "America/Buenos_Aires",
          "America/Cambridge_Bay",
          "America/Campo_Grande",
          "America/Cancun",
          "America/Caracas",
          "America/Catamarca",
          "America/Cayenne",
          "America/Cayman",
          "America/Chicago",
          "America/Chihuahua",
          "America/Ciudad_Juarez",
          "America/Coral_Harbour",
          "America/Cordoba",
          "America/Costa_Rica",
          "America/Coyhaique",
          "America/Creston",
          "America/Cuiaba",
          "America/Curacao",
          "America/Danmarkshavn",
          "America/Dawson",
          "America/Dawson_Creek",
          "America/Denver",
          "America/Detroit",
          "America/Dominica",
          "America/Edmonton",
          "America/Eirunepe",
          "America/El_Salvador",
          "America/Ensenada",
          "America/Fort_Nelson",
          "America/Fort_Wayne",
          "America/Fortaleza",
          "America/Glace_Bay",
          "America/Godthab",
          "America/Goose_Bay",
          "America/Grand_Turk",
          "America/Grenada",
          "America/Guadeloupe",
          "America/Guatemala",
          "America/Guayaquil",
          "America/Guyana",
          "America/Halifax",
          "America/Havana",
          "America/Hermosillo",
          "America/Indiana/Indianapolis",
          "America/Indiana/Knox",
          "America/Indiana/Marengo",
          "America/Indiana/Petersburg",
          "America/Indiana/Tell_City",
          "America/Indiana/Vevay",
          "America/Indiana/Vincennes",
          "America/Indiana/Winamac",
          "America/Indianapolis",
          "America/Inuvik",
          "America/Iqaluit",
          "America/Jamaica",
          "America/Jujuy",
          "America/Juneau",
          "America/Kentucky/Louisville",
          "America/Kentucky/Monticello",
          "America/Knox_IN",
          "America/Kralendijk",
          "America/La_Paz",
          "America/Lima",
          "America/Los_Angeles",
          "America/Louisville",
          "America/Lower_Princes",
          "America/Maceio",
          "America/Managua",
          "America/Manaus",
          "America/Marigot",
          "America/Martinique",
          "America/Matamoros",
          "America/Mazatlan",
          "America/Mendoza",
          "America/Menominee",
          "America/Merida",
          "America/Metlakatla",
          "America/Mexico_City",
          "America/Miquelon",
          "America/Moncton",
          "America/Monterrey",
          "America/Montevideo",
          "America/Montreal",
          "America/Montserrat",
          "America/Nassau",
          "America/New_York",
          "America/Nipigon",
          "America/Nome",
          "America/Noronha",
          "America/North_Dakota/Beulah",
          "America/North_Dakota/Center",
          "America/North_Dakota/New_Salem",
          "America/Nuuk",
          "America/Ojinaga",
          "America/Panama",
          "America/Pangnirtung",
          "America/Paramaribo",
          "America/Phoenix",
          "America/Port-au-Prince",
          "America/Port_of_Spain",
          "America/Porto_Acre",
          "America/Porto_Velho",
          "America/Puerto_Rico",
          "America/Punta_Arenas",
          "America/Rainy_River",
          "America/Rankin_Inlet",
          "America/Recife",
          "America/Regina",
          "America/Resolute",
          "America/Rio_Branco",
          "America/Rosario",
          "America/Santa_Isabel",
          "America/Santarem",
          "America/Santiago",
          "America/Santo_Domingo",
          "America/Sao_Paulo",
          "America/Scoresbysund",
          "America/Shiprock",
          "America/Sitka",
          "America/St_Barthelemy",
          "America/St_Johns",
          "America/St_Kitts",
          "America/St_Lucia",
          "America/St_Thomas",
          "America/St_Vincent",
          "America/Swift_Current",
          "America/Tegucigalpa",
          "America/Thule",
          "America/Thunder_Bay",
          "America/Tijuana",
          "America/Toronto",
          "America/Tortola",
          "America/Vancouver",
          "America/Virgin",
          "America/Whitehorse",
          "America/Winnipeg",
          "America/Yakutat",
          "America/Yellowknife",
          "Antarctica/Casey",
          "Antarctica/Davis",
          "Antarctica/DumontDUrville",
          "Antarctica/Macquarie",
          "Antarctica/Mawson",
          "Antarctica/McMurdo",
          "Antarctica/Palmer",
          "Antarctica/Rothera",
          "Antarctica/South_Pole",
          "Antarctica/Syowa",
          "Antarctica/Troll",
          "Antarctica/Vostok",
          "Arctic/Longyearbyen"
        ],
        "title": "TimezoneChoices",
        "type": "string"
      },
      "UserFilterSchema": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by email (contains)",
            "title": "Email"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by active status",
            "title": "Is Active"
          },
          "is_staff": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by staff status",
            "title": "Is Staff"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by superuser status",
            "title": "Is Superuser"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Search in username, email, first_name, last_name",
            "title": "Search"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by exact username",
            "title": "Username"
          }
        },
        "title": "UserFilterSchema",
        "type": "object"
      },
      "UserGroupAssignInSchema": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          }
        },
        "required": ["id"],
        "title": "UserGroupAssignInSchema",
        "type": "object"
      },
      "UserInCreateSchema": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "is_active": {
            "default": false,
            "title": "Is Active",
            "type": "boolean"
          },
          "is_staff": {
            "default": false,
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_superuser": {
            "default": false,
            "title": "Is Superuser",
            "type": "boolean"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "password": {
            "format": "password",
            "title": "Password",
            "type": "string",
            "writeOnly": true
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": ["username", "password"],
        "title": "UserInCreateSchema",
        "type": "object"
      },
      "UserOutSchema": {
        "properties": {
          "date_joined": {
            "format": "date-time",
            "title": "Date Joined",
            "type": "string"
          },
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "is_active": {
            "default": false,
            "title": "Is Active",
            "type": "boolean"
          },
          "is_staff": {
            "default": false,
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_superuser": {
            "default": false,
            "title": "Is Superuser",
            "type": "boolean"
          },
          "last_login": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": ["id", "first_name", "last_name", "username", "last_login", "date_joined"],
        "title": "UserOutSchema",
        "type": "object"
      },
      "UserProfileOutSchema": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "items_per_page": {
            "$ref": "#/components/schemas/ImagesPerPageChoices"
          },
          "timezone_name": {
            "$ref": "#/components/schemas/TimezoneChoices"
          }
        },
        "required": ["items_per_page", "bio", "timezone_name"],
        "title": "UserProfileOutSchema",
        "type": "object"
      },
      "UserProfileUpdateSchema": {
        "properties": {
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "items_per_page": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImagesPerPageChoices"
              },
              {
                "type": "null"
              }
            ]
          },
          "timezone_name": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimezoneChoices"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "UserProfileUpdateSchema",
        "type": "object"
      },
      "UserStatisticsSchema": {
        "description": "Schema for user-specific statistics.",
        "properties": {
          "total_albums_editable": {
            "description": "Total number of albums the current user can edit.",
            "title": "Total Albums Editable",
            "type": "integer"
          },
          "total_albums_viewable": {
            "description": "Total number of albums the current user can view.",
            "title": "Total Albums Viewable",
            "type": "integer"
          },
          "total_folders_editable": {
            "description": "Total number of image folders the current user can edit.",
            "title": "Total Folders Editable",
            "type": "integer"
          },
          "total_folders_viewable": {
            "description": "Total number of image folders the current user can view.",
            "title": "Total Folders Viewable",
            "type": "integer"
          },
          "total_images_editable": {
            "description": "Total number of images the current user can edit.",
            "title": "Total Images Editable",
            "type": "integer"
          },
          "total_images_viewable": {
            "description": "Total number of images the current user can view.",
            "title": "Total Images Viewable",
            "type": "integer"
          },
          "total_people_editable": {
            "description": "Total number of people the current user can edit.",
            "title": "Total People Editable",
            "type": "integer"
          },
          "total_people_viewable": {
            "description": "Total number of people the current user can view.",
            "title": "Total People Viewable",
            "type": "integer"
          },
          "total_pets_editable": {
            "description": "Total number of pets the current user can edit.",
            "title": "Total Pets Editable",
            "type": "integer"
          },
          "total_pets_viewable": {
            "description": "Total number of pets the current user can view.",
            "title": "Total Pets Viewable",
            "type": "integer"
          },
          "total_rough_dates": {
            "description": "Total number of rough dates the current user can view.",
            "title": "Total Rough Dates",
            "type": "integer"
          },
          "total_rough_locations": {
            "description": "Total number of rough locations the current user can view.",
            "title": "Total Rough Locations",
            "type": "integer"
          },
          "total_sources_editable": {
            "description": "Total number of image sources the current user can edit.",
            "title": "Total Sources Editable",
            "type": "integer"
          },
          "total_sources_viewable": {
            "description": "Total number of image sources the current user can view.",
            "title": "Total Sources Viewable",
            "type": "integer"
          },
          "total_tags": {
            "description": "Total number of tags in the system",
            "title": "Total Tags",
            "type": "integer"
          }
        },
        "required": [
          "total_images_viewable",
          "total_images_editable",
          "total_albums_viewable",
          "total_albums_editable",
          "total_tags",
          "total_people_viewable",
          "total_people_editable",
          "total_pets_viewable",
          "total_pets_editable",
          "total_folders_viewable",
          "total_folders_editable",
          "total_sources_viewable",
          "total_sources_editable",
          "total_rough_dates",
          "total_rough_locations"
        ],
        "title": "UserStatisticsSchema",
        "type": "object"
      },
      "UserUpdateInScheme": {
        "properties": {
          "email": {
            "anyOf": [
              {
                "format": "email",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_staff": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Staff"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "password": {
            "anyOf": [
              {
                "format": "password",
                "type": "string",
                "writeOnly": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          }
        },
        "title": "UserUpdateInScheme",
        "type": "object"
      }
    },
    "securitySchemes": {
      "AsyncSessionAuthIsActive": {
        "in": "cookie",
        "name": "sessionid",
        "type": "apiKey"
      },
      "AsyncSessionAuthIsActiveSuperUserOrStaff": {
        "in": "cookie",
        "name": "sessionid",
        "type": "apiKey"
      },
      "SessionAuthIsActive": {
        "in": "cookie",
        "name": "sessionid",
        "type": "apiKey"
      },
      "SessionAuthIsActiveSuperUserOrStaff": {
        "in": "cookie",
        "name": "sessionid",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "description": "",
    "title": "Memoria API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/api/album/": {
      "get": {
        "description": "List albums viewable by the current user",
        "operationId": "get_all_albums",
        "parameters": [
          {
            "in": "query",
            "name": "album_name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Album Name"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedAlbumBasicReadOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Albums",
        "tags": ["albums"]
      },
      "post": {
        "description": "Create a new album with optional view/edit groups",
        "operationId": "create_album",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumCreateInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumBasicReadOutSchema"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Create Album",
        "tags": ["albums"]
      }
    },
    "/api/album/{album_id}/": {
      "delete": {
        "operationId": "delete_album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Delete Album",
        "tags": ["albums"]
      },
      "get": {
        "description": "Retrieve full details of a single album",
        "operationId": "get_single_album_info",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesOutSchema"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Album not found or inaccessible"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Album",
        "tags": ["albums"]
      },
      "patch": {
        "description": "Update album name, description, and group permissions",
        "operationId": "update_album_info",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumUpdateInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumBasicReadOutSchema"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Album not found or inaccessible"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Update Album",
        "tags": ["albums"]
      }
    },
    "/api/album/{album_id}/add/": {
      "patch": {
        "operationId": "add_image_to_album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumAddImageInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Add Image To Album",
        "tags": ["albums"]
      }
    },
    "/api/album/{album_id}/download/": {
      "get": {
        "description": "Download all images in an album as a ZIP archive.\nYou can choose original or full-size paths. Requires view access.",
        "operationId": "download_album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "zip_originals",
            "required": false,
            "schema": {
              "default": false,
              "title": "Zip Originals",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Download Album",
        "tags": ["albums"]
      }
    },
    "/api/album/{album_id}/remove/": {
      "patch": {
        "operationId": "delete_image_from_album",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumRemoveImageInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Remove Image From Album",
        "tags": ["albums"]
      }
    },
    "/api/album/{album_id}/sort/": {
      "patch": {
        "description": "Reorder images in the album using a list of image IDs",
        "operationId": "update_album_sorting",
        "parameters": [
          {
            "in": "path",
            "name": "album_id",
            "required": true,
            "schema": {
              "title": "Album Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlbumSortUpdateInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlbumWithImagesOutSchema"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Sorting list mismatch with album contents"
          },
          "404": {
            "description": "Album not found or inaccessible"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Update Album Sorting",
        "tags": ["albums"]
      }
    },
    "/api/auth/csrf/": {
      "get": {
        "operationId": "auth_get_csrf_token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CsrfTokenOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Csrf Token",
        "tags": ["auth"]
      }
    },
    "/api/auth/login/": {
      "post": {
        "operationId": "auth_login",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthLoginSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "username or password not provided"
          },
          "401": {
            "description": "invalid username or password provided"
          }
        },
        "summary": "Login",
        "tags": ["auth"]
      }
    },
    "/api/auth/logout/": {
      "post": {
        "operationId": "auth_logout",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Logout",
        "tags": ["auth"]
      }
    },
    "/api/folder/": {
      "get": {
        "description": "List root image folders with permission filtering",
        "operationId": "folder_list_roots",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RootFolderSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List Image Folders",
        "tags": ["folders"]
      }
    },
    "/api/folder/all/": {
      "get": {
        "description": "List all image folders with permission filtering",
        "operationId": "listAllFolders",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RootFolderSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List All Image Folders",
        "tags": ["folders"]
      }
    },
    "/api/folder/{folder_id}/": {
      "get": {
        "description": "Get details of a specific image folder with children and images",
        "operationId": "folder_get_details",
        "parameters": [
          {
            "in": "path",
            "name": "folder_id",
            "required": true,
            "schema": {
              "title": "Folder Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderDetailSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Image Folder",
        "tags": ["folders"]
      },
      "patch": {
        "operationId": "update_folder_info",
        "parameters": [
          {
            "in": "path",
            "name": "folder_id",
            "required": true,
            "schema": {
              "title": "Folder Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderUpdateSchemaIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderDetailSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update Folder",
        "tags": ["folders"]
      }
    },
    "/api/groups/": {
      "get": {
        "description": "Retrieves all groups.\n\nReturns:\n    A list of GroupOutSchema objects representing all groups.",
        "operationId": "list_groups",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupOutSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "List Groups",
        "tags": ["groups"]
      },
      "post": {
        "description": "Creates one or more groups from a list of group schemas or a single group.\n\nArgs:\n    request: The Django request object.\n    data: A GroupCreateInSchema object or list of GroupCreateInSchema objects.\n\nReturns:\n    A list of GroupOutSchema objects representing the created groups.",
        "operationId": "create_groups",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/GroupCreateInSchema"
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/GroupCreateInSchema"
                    },
                    "type": "array"
                  }
                ],
                "title": "Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupOutSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "SessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Create Groups",
        "tags": ["groups"]
      }
    },
    "/api/groups/{group_id}/": {
      "delete": {
        "description": "Deletes a single group by ID.\n\nArgs:\n    group_id: The ID of the group to delete.\n\nReturns:\n    HTTP 204 No Content on successful deletion.",
        "operationId": "delete_group",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "title": "Group Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Delete Group",
        "tags": ["groups"]
      },
      "get": {
        "description": "Retrieves a single group by ID.\n\nArgs:\n    group_id: The ID of the group to retrieve.\n\nReturns:\n    A GroupOutSchema object representing the requested group.",
        "operationId": "get_group",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "title": "Group Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Get Group",
        "tags": ["groups"]
      },
      "patch": {
        "description": "Updates a single group's information.\n\nArgs:\n    group_id: The ID of the group to update.\n    data: The updated group data.\n\nReturns:\n    A GroupOutSchema object representing the updated group.",
        "operationId": "update_group",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "title": "Group Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdateInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Update Group",
        "tags": ["groups"]
      }
    },
    "/api/image/": {
      "get": {
        "operationId": "list_images",
        "parameters": [
          {
            "description": "Filter by dirty status",
            "in": "query",
            "name": "is_dirty",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by dirty status",
              "title": "Is Dirty"
            }
          },
          {
            "description": "Filter by starred status",
            "in": "query",
            "name": "is_starred",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by starred status",
              "title": "Is Starred"
            }
          },
          {
            "description": "Filter by deletion status",
            "in": "query",
            "name": "is_deleted",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by deletion status",
              "title": "Is Deleted"
            }
          },
          {
            "description": "Filter by ImageFolder ID",
            "in": "query",
            "name": "folder_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ImageFolder ID",
              "title": "Folder Id"
            }
          },
          {
            "description": "Filter by Person IDs",
            "in": "query",
            "name": "people_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Person IDs",
              "title": "People Ids"
            }
          },
          {
            "description": "Filter by Pet IDs",
            "in": "query",
            "name": "pets_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Pet IDs",
              "title": "Pets Ids"
            }
          },
          {
            "description": "Filter by Tag IDs",
            "in": "query",
            "name": "tags_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Tag IDs",
              "title": "Tags Ids"
            }
          },
          {
            "description": "Exclude images with these Person IDs",
            "in": "query",
            "name": "exclude_people_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Exclude images with these Person IDs",
              "title": "Exclude People Ids"
            }
          },
          {
            "description": "Exclude images with these Pet IDs",
            "in": "query",
            "name": "exclude_pets_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Exclude images with these Pet IDs",
              "title": "Exclude Pets Ids"
            }
          },
          {
            "description": "Exclude images with these Tag IDs",
            "in": "query",
            "name": "exclude_tags_ids",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Exclude images with these Tag IDs",
              "title": "Exclude Tags Ids"
            }
          },
          {
            "description": "Require ALL specified IDs to be present (AND logic)",
            "in": "query",
            "name": "require_all",
            "required": false,
            "schema": {
              "default": false,
              "description": "Require ALL specified IDs to be present (AND logic)",
              "title": "Require All",
              "type": "boolean"
            }
          },
          {
            "description": "Filter images from this date onwards using comparison_date",
            "in": "query",
            "name": "date_start",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this date onwards using comparison_date",
              "title": "Date Start"
            }
          },
          {
            "description": "Filter images up to this date using comparison_date",
            "in": "query",
            "name": "date_end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "date",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images up to this date using comparison_date",
              "title": "Date End"
            }
          },
          {
            "description": "Filter images from this year onwards",
            "in": "query",
            "name": "year_start",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this year onwards",
              "title": "Year Start"
            }
          },
          {
            "description": "Filter images up to this year",
            "in": "query",
            "name": "year_end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images up to this year",
              "title": "Year End"
            }
          },
          {
            "description": "Filter images from this month onwards (1-12, includes null months)",
            "in": "query",
            "name": "month_start",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this month onwards (1-12, includes null months)",
              "title": "Month Start"
            }
          },
          {
            "description": "Filter images up to this month (1-12, includes null months)",
            "in": "query",
            "name": "month_end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images up to this month (1-12, includes null months)",
              "title": "Month End"
            }
          },
          {
            "description": "Filter images from this day onwards (1-31, includes null days)",
            "in": "query",
            "name": "day_start",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this day onwards (1-31, includes null days)",
              "title": "Day Start"
            }
          },
          {
            "description": "Filter images up to this day (1-31, includes null days)",
            "in": "query",
            "name": "day_end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images up to this day (1-31, includes null days)",
              "title": "Day End"
            }
          },
          {
            "description": "Filter images from this exact year",
            "in": "query",
            "name": "year",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this exact year",
              "title": "Year"
            }
          },
          {
            "description": "Filter images from this exact month (1-12)",
            "in": "query",
            "name": "month",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "maximum": 12,
                  "minimum": 1,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this exact month (1-12)",
              "title": "Month"
            }
          },
          {
            "description": "Filter images from this exact day (1-31)",
            "in": "query",
            "name": "day",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "maximum": 31,
                  "minimum": 1,
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter images from this exact day (1-31)",
              "title": "Day"
            }
          },
          {
            "description": "Filter by country code (ISO 3166-1 alpha 2)",
            "in": "query",
            "name": "country_code",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by country code (ISO 3166-1 alpha 2)",
              "title": "Country Code"
            }
          },
          {
            "description": "Filter by state/province code (ISO 3166-2)",
            "in": "query",
            "name": "subdivision_code",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by state/province code (ISO 3166-2)",
              "title": "Subdivision Code"
            }
          },
          {
            "description": "Filter by city name (partial match)",
            "in": "query",
            "name": "city",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by city name (partial match)",
              "title": "City"
            }
          },
          {
            "description": "Filter by sub-location (partial match)",
            "in": "query",
            "name": "sub_location",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by sub-location (partial match)",
              "title": "Sub Location"
            }
          },
          {
            "description": "Field to sort by",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "pk",
              "description": "Field to sort by",
              "enum": [
                "created_at",
                "-created_at",
                "updated_at",
                "-updated_at",
                "pk",
                "title",
                "-title"
              ],
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedImageThumbnailSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "List Images",
        "tags": ["images"]
      }
    },
    "/api/image/bulk/thumbnails/": {
      "post": {
        "operationId": "image_get_thumbnails_bulk_info",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "integer"
                },
                "title": "Image Ids",
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ImageThumbnailSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image Thumbnails Bulk Info",
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/date/": {
      "get": {
        "operationId": "image_get_date",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageDateSchemaOut"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "The image has no date"
          },
          "401": {
            "description": "The user does not have permissions for this image"
          },
          "404": {
            "description": "The image does not exist"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image Date",
        "tags": ["images"]
      },
      "patch": {
        "operationId": "image_update_date",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageDateUpdateSchemaIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageDateSchemaOut"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "The user does not have permissions for this image"
          },
          "404": {
            "description": "The image does not exist"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Update Image Date",
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/location/": {
      "get": {
        "operationId": "image_get_location",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageLocationSchemaOut"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "The image has no location"
          },
          "401": {
            "description": "The user does not have permissions for this image"
          },
          "404": {
            "description": "The image does not exist"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image Location",
        "tags": ["images"]
      },
      "patch": {
        "operationId": "image_update_location",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageLocationUpdateSchemaIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageLocationSchemaOut"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "The country is not found or subdivision is not in the country"
          },
          "401": {
            "description": "The user does not have permissions for this image"
          },
          "404": {
            "description": "The image does not exist"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Update Image Location",
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/metadata/": {
      "get": {
        "operationId": "image_get_metadata",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageMetadataSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image Details",
        "tags": ["images"]
      },
      "patch": {
        "operationId": "image_update_metadata",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageMetadataUpdateSchemaIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageMetadataSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Update Image Details",
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/people/": {
      "get": {
        "operationId": "image_get_people",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PersonInImageSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image People",
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/pets/": {
      "get": {
        "operationId": "image_get_pets",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PetInImageSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image Pets",
        "tags": ["images"]
      }
    },
    "/api/image/{image_id}/thumbnail/": {
      "get": {
        "operationId": "image_get_thumb_info",
        "parameters": [
          {
            "in": "path",
            "name": "image_id",
            "required": true,
            "schema": {
              "title": "Image Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageThumbnailSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Image Thumbnail Info",
        "tags": ["images"]
      }
    },
    "/api/location/cities/": {
      "get": {
        "operationId": "list_possible_country_cities",
        "parameters": [
          {
            "in": "query",
            "name": "country_code",
            "required": true,
            "schema": {
              "title": "Country Code",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "subdivision_code",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subdivision Code"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Existing Cities",
        "tags": ["locations"]
      }
    },
    "/api/location/countries/": {
      "get": {
        "description": "List all countries where images have been taken",
        "operationId": "list_countries",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryListItemSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Countries With Images In Them",
        "tags": ["locations"]
      }
    },
    "/api/location/countries/all/": {
      "get": {
        "description": "List all countries in the world, as per ISO-3166-1",
        "operationId": "list_all_world_countries",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CountryListItemSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get All Countries",
        "tags": ["locations"]
      }
    },
    "/api/location/subdivisions/": {
      "get": {
        "description": "List all subdivisions/states where images have been taken, filtered by country code",
        "operationId": "list_subdivisions",
        "parameters": [
          {
            "in": "query",
            "name": "country_code",
            "required": true,
            "schema": {
              "title": "Country Code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SubdivisionListItemSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Subdivisions With Images In Them",
        "tags": ["locations"]
      }
    },
    "/api/location/subdivisions/all/": {
      "get": {
        "description": "List all subdivisions of a given country, as per ISO-3166-2",
        "operationId": "list_all_country_subdivisions",
        "parameters": [
          {
            "in": "query",
            "name": "country_code",
            "required": true,
            "schema": {
              "title": "Country Code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SubdivisionListItemSchemaOut"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Subdivisions For Country",
        "tags": ["locations"]
      }
    },
    "/api/location/sublocations/": {
      "get": {
        "operationId": "location_get_sub_locations",
        "parameters": [
          {
            "in": "query",
            "name": "country_code",
            "required": true,
            "schema": {
              "title": "Country Code",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "city_name",
            "required": true,
            "schema": {
              "title": "City Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "subdivision_code",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Subdivision Code"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Existing Sublocations",
        "tags": ["locations"]
      }
    },
    "/api/person/": {
      "get": {
        "operationId": "get_all_people",
        "parameters": [
          {
            "description": "Field to sort by: 'name' or 'image_count'. Prefix with '-' for descending order (e.g., '-image_count').",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "name",
              "description": "Field to sort by: 'name' or 'image_count'. Prefix with '-' for descending order (e.g., '-image_count').",
              "enum": ["name", "-name", "image_count", "-image_count"],
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "person_name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Person Name"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPersonReadOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get All People",
        "tags": ["people"]
      }
    },
    "/api/person/{person_id}/": {
      "get": {
        "operationId": "get_person_detail",
        "parameters": [
          {
            "in": "path",
            "name": "person_id",
            "required": true,
            "schema": {
              "title": "Person Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetailOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Person Detail",
        "tags": ["people"]
      },
      "patch": {
        "operationId": "update_person_detail",
        "parameters": [
          {
            "in": "path",
            "name": "person_id",
            "required": true,
            "schema": {
              "title": "Person Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonUpdateInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetailOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Update Person",
        "tags": ["people"]
      }
    },
    "/api/person/{person_id}/images/": {
      "get": {
        "operationId": "get_person_images",
        "parameters": [
          {
            "in": "path",
            "name": "person_id",
            "required": true,
            "schema": {
              "title": "Person Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPersonImageOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Person Images",
        "tags": ["people"]
      }
    },
    "/api/pet/": {
      "get": {
        "operationId": "get_all_pets",
        "parameters": [
          {
            "description": "Field to sort by: 'name' or 'image_count'. Prefix with '-' for descending order (e.g., '-image_count').",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "name",
              "description": "Field to sort by: 'name' or 'image_count'. Prefix with '-' for descending order (e.g., '-image_count').",
              "enum": ["name", "-name", "image_count", "-image_count"],
              "title": "Sort By",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pet_name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pet Name"
            }
          },
          {
            "in": "query",
            "name": "pet_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PetTypeChoices"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPetReadSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get All Pets",
        "tags": ["pets"]
      }
    },
    "/api/pet/{pet_id}/": {
      "get": {
        "operationId": "get_pet_detail",
        "parameters": [
          {
            "in": "path",
            "name": "pet_id",
            "required": true,
            "schema": {
              "title": "Pet Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetReadDetailSchemaOut"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Not Found Response"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Get Single Pet",
        "tags": ["pets"]
      },
      "patch": {
        "operationId": "update_pet",
        "parameters": [
          {
            "in": "path",
            "name": "pet_id",
            "required": true,
            "schema": {
              "title": "Pet Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PetUpdateInSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetReadDetailSchemaOut"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Not Found Response"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Update Pet",
        "tags": ["pets"]
      }
    },
    "/api/pet/{pet_id}/images/": {
      "get": {
        "operationId": "get_pet_images",
        "parameters": [
          {
            "in": "path",
            "name": "pet_id",
            "required": true,
            "schema": {
              "title": "Pet Id",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPetImageOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Get Person Images",
        "tags": ["pets"]
      }
    },
    "/api/system/settings/": {
      "get": {
        "operationId": "get_system_settings",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSettingsSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Get System Settings",
        "tags": ["system"]
      },
      "patch": {
        "operationId": "update_system_settings",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSettingsUpdateSchemaIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSettingsSchemaOut"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Update System Settings",
        "tags": ["system"]
      }
    },
    "/api/system/statistics/": {
      "get": {
        "description": "Returns statistics about the system, including counts of various objects\nand disk space usage, filtered by the current user's view/edit permissions.\nSystem-wide object counts are no longer exposed to prevent information leakage.",
        "operationId": "get_system_statistics",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsResponseSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get System Statistics",
        "tags": ["system"]
      }
    },
    "/api/user/": {
      "get": {
        "description": "Get all users with filtering and pagination.",
        "operationId": "users_list",
        "parameters": [
          {
            "description": "Filter by active status",
            "in": "query",
            "name": "is_active",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by active status",
              "title": "Is Active"
            }
          },
          {
            "description": "Filter by staff status",
            "in": "query",
            "name": "is_staff",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by staff status",
              "title": "Is Staff"
            }
          },
          {
            "description": "Filter by superuser status",
            "in": "query",
            "name": "is_superuser",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by superuser status",
              "title": "Is Superuser"
            }
          },
          {
            "description": "Search in username, email, first_name, last_name",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search in username, email, first_name, last_name",
              "title": "Search"
            }
          },
          {
            "description": "Filter by exact username",
            "in": "query",
            "name": "username",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by exact username",
              "title": "Username"
            }
          },
          {
            "description": "Filter by email (contains)",
            "in": "query",
            "name": "email",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by email (contains)",
              "title": "Email"
            }
          },
          {
            "description": "Field to sort by: 'username' or 'id'. ",
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "pk",
              "description": "Field to sort by: 'username' or 'id'. ",
              "enum": ["username", "pk"],
              "title": "Sort By",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserOutSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Users List",
        "tags": ["users"]
      },
      "post": {
        "description": "Create a new user with proper permission checks and validation.",
        "operationId": "users_create",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutSchema"
                }
              }
            },
            "description": "Created"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Users Create",
        "tags": ["users"]
      }
    },
    "/api/user/me/": {
      "get": {
        "description": "Get current user's information.",
        "operationId": "users_get_current",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "SessionAuthIsActive": []
          }
        ],
        "summary": "Users Get Current",
        "tags": ["users"]
      }
    },
    "/api/user/me/profile/": {
      "get": {
        "description": "Get current user's profile.",
        "operationId": "users_profile_get_current",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Users Profile Get Current",
        "tags": ["users"]
      }
    },
    "/api/user/{user_id}/groups/": {
      "get": {
        "description": "Get user's groups with permission checks.",
        "operationId": "users_groups_list",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupOutSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Users Groups List",
        "tags": ["users"]
      },
      "patch": {
        "description": "Set user's groups with validation.",
        "operationId": "users_groups_update",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/UserGroupAssignInSchema"
                },
                "title": "Data",
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupOutSchema"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Some provided groups don't exist"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActiveSuperUserOrStaff": []
          }
        ],
        "summary": "Users Groups Update",
        "tags": ["users"]
      }
    },
    "/api/user/{user_id}/info/": {
      "get": {
        "description": "Get user information with proper permission checks.",
        "operationId": "users_get_by_id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Users Get By Id",
        "tags": ["users"]
      },
      "patch": {
        "description": "Update user information with proper permission and validation checks.",
        "operationId": "users_update",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInScheme"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Users Update",
        "tags": ["users"]
      }
    },
    "/api/user/{user_id}/profile/": {
      "get": {
        "description": "Get user profile with permission checks.",
        "operationId": "users_profile_get_by_id",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Users Profile Get By Id",
        "tags": ["users"]
      },
      "patch": {
        "description": "Edit user profile with permission checks.",
        "operationId": "users_profile_update",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileOutSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "AsyncSessionAuthIsActive": []
          }
        ],
        "summary": "Users Profile Update",
        "tags": ["users"]
      }
    }
  },
  "servers": []
}
