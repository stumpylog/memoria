# Main context - Global settings
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    # HTTP block - Global HTTP settings
    include       mime.types; # Defines MIME types
    default_type  application/octet-stream;

    # Access log format (can be defined here or in server blocks)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /app/data/logs/nginx/access.log  main;
    access_log  /dev/stdout  main;

    error_log  /app/data/logs/nginx/error.log  error;
    error_log /dev/stderr error;

    sendfile        on;
    tcp_nopush      on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    upstream django_app {
        server 127.0.0.1:8100;
    }

    server {
        listen 8101;
        server_name _;

        # === Security Headers ===
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header Referrer-Policy no-referrer-when-downgrade always;
        # === End Security Headers ===

        location = /favicon.ico {
            alias /app/static/images/favicon.svg;
            etag on;
            expires 365d;
            access_log off;
            log_not_found off;
            default_type "image/svg+xml";
        }

        location = /favicon.svg {
            alias /app/static/images/favicon.svg;
            etag on;
            expires 365d;
            access_log off;
            log_not_found off;
            default_type "image/svg+xml";
        }

        location /static/ {
            alias /app/static/;
            etag on;
            expires 30d;
            autoindex off;
        }

        location /media/ {
            alias /app/media/;
            etag on;
            expires 30d;
            autoindex off;
        }

        location / {
            proxy_pass http://django_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
        }
    }}
