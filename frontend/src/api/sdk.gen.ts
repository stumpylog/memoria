// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { AuthGetCsrfTokenData, AuthGetCsrfTokenResponse, AuthLoginData, AuthLoginResponse, AuthLogoutData, AuthLogoutResponse, UserCreateData, UserCreateResponse, UserGetProfileData, UserGetProfileResponse, UserEditProfileData, UserEditProfileResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Csrf Token
 */
export const authGetCsrfToken = <ThrowOnError extends boolean = false>(options?: Options<AuthGetCsrfTokenData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AuthGetCsrfTokenResponse, unknown, ThrowOnError>({
        url: '/api/auth/csrf/',
        ...options
    });
};

/**
 * Login
 */
export const authLogin = <ThrowOnError extends boolean = false>(options?: Options<AuthLoginData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthLoginResponse, unknown, ThrowOnError>({
        url: '/api/auth/login/',
        ...options
    });
};

/**
 * Logout
 */
export const authLogout = <ThrowOnError extends boolean = false>(options?: Options<AuthLogoutData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<AuthLogoutResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            }
        ],
        url: '/api/auth/logout/',
        ...options
    });
};

/**
 * Create User
 */
export const userCreate = <ThrowOnError extends boolean = false>(options: Options<UserCreateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UserCreateResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            }
        ],
        url: '/api/user/create/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Profile
 */
export const userGetProfile = <ThrowOnError extends boolean = false>(options?: Options<UserGetProfileData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<UserGetProfileResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            }
        ],
        url: '/api/user/profile/',
        ...options
    });
};

/**
 * Edit Profile
 */
export const userEditProfile = <ThrowOnError extends boolean = false>(options: Options<UserEditProfileData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UserEditProfileResponse, unknown, ThrowOnError>({
        security: [
            {
                in: 'cookie',
                name: 'sessionid',
                type: 'apiKey'
            }
        ],
        url: '/api/user/profile/edit/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};
